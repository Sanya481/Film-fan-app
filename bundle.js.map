{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://cinemaddict/./src/framework/view/abstract-view.css","webpack://cinemaddict/./node_modules/css-loader/dist/runtime/api.js","webpack://cinemaddict/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://cinemaddict/./node_modules/dayjs/dayjs.min.js","webpack://cinemaddict/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://cinemaddict/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://cinemaddict/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://cinemaddict/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://cinemaddict/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://cinemaddict/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://cinemaddict/webpack/bootstrap","webpack://cinemaddict/webpack/runtime/compat get default export","webpack://cinemaddict/webpack/runtime/define property getters","webpack://cinemaddict/webpack/runtime/hasOwnProperty shorthand","webpack://cinemaddict/webpack/runtime/nonce","webpack://cinemaddict/./src/framework/view/abstract-view.css?dfa6","webpack://cinemaddict/./src/framework/view/abstract-view.js","webpack://cinemaddict/./src/framework/render.js","webpack://cinemaddict/./src/view/common-films-section-view.js","webpack://cinemaddict/./src/view/main-films-list-section-view.js","webpack://cinemaddict/./src/view/movie-card-container-view.js","webpack://cinemaddict/./src/view/show-more-btn-view.js","webpack://cinemaddict/./src/view/empty-film-list.js","webpack://cinemaddict/./src/const.js","webpack://cinemaddict/./src/view/list-sort-view.js","webpack://cinemaddict/./src/view/total-quantity-films-view.js","webpack://cinemaddict/./src/utils.js","webpack://cinemaddict/./src/framework/view/abstract-stateful-view.js","webpack://cinemaddict/./src/view/film-details-view.js","webpack://cinemaddict/./src/presenter/film-details-popup-presenter.js","webpack://cinemaddict/./src/view/movie-card-view.js","webpack://cinemaddict/./src/presenter/movie-card-presenter.js","webpack://cinemaddict/./src/view/filter-movie-view.js","webpack://cinemaddict/./src/presenter/movie-board-presenter.js","webpack://cinemaddict/./src/mock-data/const.js","webpack://cinemaddict/./src/mock-data/film-info.js","webpack://cinemaddict/./src/mock-data/user-comments.js","webpack://cinemaddict/./src/main.js","webpack://cinemaddict/./src/model/film-card-model.js","webpack://cinemaddict/./src/view/user-title-view.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".shake {\\n  animation: shake 0.6s;\\n  position: relative;\\n  z-index: 10;\\n}\\n\\n@keyframes shake {\\n  0%,\\n  100% {\\n    transform: translateX(0);\\n  }\\n\\n  10%,\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    transform: translateX(-5px);\\n  }\\n\\n  20%,\\n  40%,\\n  60%,\\n  80% {\\n    transform: translateX(5px);\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/framework/view/abstract-view.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE;;IAEE,wBAAwB;EAC1B;;EAEA;;;;;IAKE,2BAA2B;EAC7B;;EAEA;;;;IAIE,0BAA0B;EAC5B;AACF\",\"sourcesContent\":[\".shake {\\n  animation: shake 0.6s;\\n  position: relative;\\n  z-index: 10;\\n}\\n\\n@keyframes shake {\\n  0%,\\n  100% {\\n    transform: translateX(0);\\n  }\\n\\n  10%,\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    transform: translateX(-5px);\\n  }\\n\\n  20%,\\n  40%,\\n  60%,\\n  80% {\\n    transform: translateX(5px);\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./abstract-view.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./abstract-view.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { createElement } from '../render.js';\nimport './abstract-view.css';\n\n/** @const {string} Класс, реализующий эффект \"покачивания головой\" */\nconst SHAKE_CLASS_NAME = 'shake';\n\n/** @const {number} Время анимации в миллисекундах */\nconst SHAKE_ANIMATION_TIMEOUT = 600;\n\n/**\n * ! Используем и описываем один раз интерфейс и решаем с помощью него похожие задачи.\n * Абстрактный класс представления. Все аохожие методы классов вынесли в отдельный класс и используем его только как интерфейс\n */\nexport default class AbstractView {\n  /** @type {HTMLElement|null} Элемент представления */\n  #element = null;\n\n  /** @type {Object} Пустой приватный обьект. Может использоваться для хранения обработчиков событий. (Нижним подчеркиванием сделали его приватным) */\n  _callback = {};\n\n  /* Защитка, чтобы не пытались делать экземпляр класса AbstractView.\n  !!! AbstractView нужен лишь для того, чтобы хранить в нем методы и свойства, которые переиспользуются во всех View (все общее во всех View)\n  new.target - это new AbstractView\n  */\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error('Can\\'t instantiate AbstractView, only concrete one.');\n    }\n  }\n\n  /**\n   * Геттер для получения элемента\n   * @returns {HTMLElement} Элемент представления\n   */\n  get element() {\n    // Если уже этот элемент создан, то просто возвращаем его\n    if (!this.#element) {\n      this.#element = createElement(this.template);\n    }\n\n    return this.#element;\n  }\n\n  /**\n   * Геттер для получения разметки элемента\n   * !!! Показываем ошибку, если разработчики захотят использовать get template у класса AbstractView, т.к. у каждого View свой get template\n   * @abstract\n   * @returns {string} Разметка элемента в виде строки\n   */\n  get template() {\n    // Бросаем ошибку, если кто то забудет реализовать свой get template\n    throw new Error('Abstract method not implemented: get template');\n  }\n\n  /** Метод для удаления элемента */\n  removeElement() {\n    this.#element = null;\n  }\n\n  /**\n   * Метод, реализующий эффект \"покачивания головой\"\n   * @param {shakeCallback} [callback] Функция, которая будет вызвана после завершения анимации\n   */\n  shake(callback) {\n    this.element.classList.add(SHAKE_CLASS_NAME);\n    setTimeout(() => {\n      this.element.classList.remove(SHAKE_CLASS_NAME);\n      callback?.();\n    }, SHAKE_ANIMATION_TIMEOUT);\n  }\n}\n\n/**\n * Функция, которая будет вызвана методом shake после завершения анимации\n * @callback shakeCallback\n */\n","import AbstractView from './view/abstract-view.js';\n\n/** @enum {string} Перечисление возможных позиций для отрисовки */\nconst RenderPosition = {\n  BEFOREBEGIN: 'beforebegin',\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n  AFTEREND: 'afterend',\n};\n\n/**\n * Функция для создания элемента на основе разметки\n * @param {string} template Разметка в виде строки\n * @returns {HTMLElement} Созданный элемент\n */\nconst createElement = (template) => {\n  const newElement = document.createElement('div');\n  newElement.innerHTML = template;\n\n  return newElement.firstElementChild;\n};\n\n/**\n * Функция для отрисовки элемента\n * @param {AbstractView} component Компонент, который должен быть отрисован\n * @param {HTMLElement} container Элемент в котором будет отрисован компонент\n * @param {string} place Позиция компонента относительно контейнера. По умолчанию - `beforeend`\n */\nconst render = (component, container, place = RenderPosition.BEFOREEND) => {\n  if (!(component instanceof AbstractView)) {\n    throw new Error('Can render only components');\n  }\n\n  if (container === null) {\n    throw new Error('Container element doesn\\'t exist');\n  }\n\n  container.insertAdjacentElement(place, component.element);\n};\n\n/**\n * Функция для замены одного компонента на другой\n * @param {AbstractView} newComponent Компонент, который нужно показать\n * @param {AbstractView} oldComponent Компонент, который нужно скрыть\n */\nconst replace = (newComponent, oldComponent) => {\n  if (!(newComponent instanceof AbstractView && oldComponent instanceof AbstractView)) {\n    throw new Error('Can replace only components');\n  }\n\n  const newElement = newComponent.element;\n  const oldElement = oldComponent.element;\n\n  const parent = oldElement.parentElement;\n\n  if (parent === null) {\n    throw new Error('Parent element doesn\\'t exist');\n  }\n\n  parent.replaceChild(newElement, oldElement);\n};\n\n/**\n * Функция для удаления компонента\n * @param {AbstractView} component Компонент, который нужно удалить\n */\nconst remove = (component) => {\n  if (component === null) {\n    return;\n  }\n\n  if (!(component instanceof AbstractView)) {\n    throw new Error('Can remove only components');\n  }\n\n  component.element.remove();\n  component.removeElement();\n};\n\nexport {RenderPosition, createElement, render, replace, remove};\n","// import { createElement } from '../render.js';\nimport AbstractView from '../framework/view/abstract-view';\n\n/**\n * @description Шаблон разметки общего контейнера для фильмов\n * @returns {string}\n */\nconst createCommonFilmsSectionTemplate = () =>\n  `\n  <section class=\"films\">\n\n  </section>\n`;\n\nexport default class CommonFilmsSectionView extends AbstractView {\n  // #element = null;\n\n  get template() {\n    return createCommonFilmsSectionTemplate();\n  }\n\n  /* !!! Все повторяющиеся методы у классов вынесли в отдельный класс AbstractView */\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n","// import { createElement } from '../render.js';\nimport AbstractView from '../framework/view/abstract-view';\n\nconst createMainFilmsListSectionTemplate = () =>\n  `\n<section class=\"films-list\">\n  <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n</section>\n`;\n\nexport default class MainFilmsListSectionView extends AbstractView {\n  // #element = null;\n\n  get template() {\n    return createMainFilmsListSectionTemplate();\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n","// import { createElement } from '../render.js';\nimport AbstractView from '../framework/view/abstract-view';\n\n/**\n * @description Шаблон для карточек фильма\n * @returns {string}\n */\nconst createMovieCardContainerTemplate = () =>\n  `\n  <div class=\"films-list__container\">\n\n  </div>\n`;\n\nexport default class MovieCardContainerView extends AbstractView {\n  // #element = null;\n\n  get template() {\n    return createMovieCardContainerTemplate();\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n","/* !!! Во View происходит навешивание обработчика событий на элемент, который присутствует в шаблоне данного View и передача callback функции из Presenter-а, которая будет обрабатывать это событие.*/\n\n/* Передача функции может происходить через конструктор класса, если мы завели конструктор и передаем callback таким способом или через публичный метод класса (в качестве параметра этого метода выступает callback функция переданная из Presenter-а ) */\n\n// import { createElement } from '../render.js';\nimport AbstractView from '../framework/view/abstract-view';\n\n/**\n * @description Шаблон кнопки - \"Показать ещё\"\n * @returns {string}\n */\nconst createShowMoreBtn = () =>\n  `\n  <button class=\"films-list__show-more\">Show more</button>\n`;\n\nexport default class ShowMoreBtnView extends AbstractView {\n  // #element = null;\n  // #onClickBtn = null;\n\n  // !!! Передача callback функции обработчика события происходит через конструктор класса\n  // constructor({ onClick }) {\n  //   super();\n  //   // Функцию записываем во внутренне свойство\n  //   this.#onClickBtn = onClick;\n  //   // В addEventListener передадим абстрактный обработчик\n  //   this.element.addEventListener('click', this.#onClickShowMoreBtn);\n  // }\n\n\n  // !!! Передача callback функции обработчика события через публичный метод\n  /**\n   * @description Публичный метод View для установки обработчика события на кнопку \"Показать ещё\"\n   * @param {function} callback\n   */\n  setShowMoreBtnClickHandler(callback) {\n    this._callback.click = callback;\n\n    this.element.addEventListener('click', this.#onClickShowMoreBtn);\n  }\n\n  /**\n   * @description Абстрактный обработчик класса по нажатию на кнопку\n   */\n  #onClickShowMoreBtn = () => {\n    // А внутри абстрактного обработчика вызовем функцию\n    // this.#onClickBtn();\n\n    this._callback.click();\n  };\n\n  get template() {\n    return createShowMoreBtn;\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n","// import { createElement } from '../render';\nimport AbstractView from '../framework/view/abstract-view';\n\n/**\n * @description Заглушка при отсутствии фильмов\n * <!--\n        Значение отображаемого текста зависит от выбранного фильтра:\n          * All movies – 'There are no movies in our database'\n          * Watchlist — 'There are no movies to watch now';\n          * History — 'There are no watched movies now';\n          * Favorites — 'There are no favorite movies now'.\n      -->\n * @returns {string}\n */\nconst createEmptyFilmListTemplate = () => (\n  `\n<section class=\"films\">\n    <section class=\"films-list\">\n      <h2 class=\"films-list__title\">There are no movies in our database</h2>\n    </section>\n  </section>\n  `\n);\n\nexport default class EmptyFilmListView extends AbstractView {\n  // #element = null;\n\n  get template() {\n    return createEmptyFilmListTemplate();\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n","/**\n * @description Виды фильтрации фильмов\n */\nexport const FilterType = {\n  DEFAULT: 'default',\n  WATCHLIST: 'watchlist',\n  ALREADYWATCHED: 'alreadywatched',\n  FAVOURITES: 'favorites'\n};\n\n/**\n * @description Виды сортировки фильмов\n */\nexport const SortType = {\n  DEFAULT: 'default',\n  DATE: 'date',\n  RATING: 'rating',\n};\n\n/**\n * @description Группы (каталоги) для фильмов\n */\nexport const MovieGroup = {\n  WATCHLIST: 'watchlist',\n  ALREADYWATCHED: 'watched',\n  FAVOURITE: 'favorite'\n};\n\n","// import { createElement } from '../render.js';\nimport AbstractView from '../framework/view/abstract-view';\n\nimport { SortType } from '../const.js';\n\n/**\n * @description Шаблон разметки (фильтры)\n * @returns {HTMLElement} - шаблонная строка с html\n */\nconst createListSortTemplate = () =>\n  `\n  <ul class=\"sort\">\n    <li><a href=\"#\" class=\"sort__button sort__button--active\" data-sort-type=${SortType.DEFAULT}>Sort by default</a></li>\n    <li><a href=\"#\" class=\"sort__button\" data-sort-type=${SortType.DATE}>Sort by date</a></li>\n    <li><a href=\"#\" class=\"sort__button\" data-sort-type=${SortType.RATING}>Sort by rating</a></li>\n  </ul>\n`;\n\nexport default class ListSortView extends AbstractView {\n  // #element = null;\n\n  setSortTypeChangeHandler = (callback) => {\n    this._callback.click = callback;\n\n    // Используем один обработчик и делегирование\n    this.element.addEventListener('click', this.#onSortTypeChange);\n  };\n\n  #onSortTypeChange = (evt) => {\n    // Добавим проверку на тег \"а\", чтобы клики по блоку сортировки не вызывали колбэк\n    if (evt.target.tagName !== 'A') {\n      return;\n    }\n\n    evt.preventDefault();\n\n    // Находим элемент с активным классом и убираем его\n    this.element.querySelector('.sort__button--active')\n      .classList.remove('sort__button--active');\n    // Добавляем класс active активному элементу\n    evt.target.classList.toggle('sort__button--active');\n\n    this._callback.click(evt.target.dataset.sortType);\n  };\n\n  get template() {\n    return createListSortTemplate();\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n","// import { createElement } from '../render.js';\nimport AbstractView from '../framework/view/abstract-view';\n\n/**\n * @description Общее количество фильмов добавленное в приложение (отоброжается в подвале)\n * @param {number} moviesCount - Общее количество фильмов\n * @returns {string}\n */\nconst createTotalQuantityFilmsTemplate = (movies) => `<p>${movies} movies inside</p>`;\n\nexport default class TotalQuantityFilmsView extends AbstractView {\n  // #element = null;\n  #moviesCount;\n\n  /**\n   * @param {number} moviesCount - Общее количество фильмов\n   */\n  constructor(moviesCount) {\n    super();\n    this.#moviesCount = moviesCount;\n  }\n\n  get template() {\n    return createTotalQuantityFilmsTemplate(this.#moviesCount);\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n\n/* !!! Должен принимать массив со всеми фильмами для отрисовки общего количества */\n","import dayjs from 'dayjs';\n\n/***\n * Формат даты - только четырехзначное значение года\n */\nexport const DATE_FORMAT_Y = 'YYYY';\n\n/**\n * Формат даты - день, полное название месяца, четырехзначное значение года\n */\nexport const DATE_FORMAT_D_M_Y = 'D MMMM YYYY';\n\n/**\n * @description Генерация случайного числа в диапазоне\n * {@link https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/random}\n * @param {Number} min\n * @param {Number} max\n * @returns {Number} возвращает случайное целое число в заданном интервале. Возвращаемое значение не менее min (или следующее целое число, которое больше min, если min не целое) и не более (но не равно) max.\n */\nexport const getRandomIntInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * @description Булевские случайные величины\n * {@link https://habr.com/ru/articles/312880/}\n * @returns {boolean}\n */\nexport const getBooleanValue = () => (Math.floor(Math.random() * 2) === 0);\n\n/**\n * @description Получение случайного элемента в массиве\n * @param {Array} items - массив\n * @returns элемент массива\n */\nexport const getRandomArrayElement = (items) => items[Math.floor(Math.random() * items.length)];\n\n/**\n * @description 'Очеловечивание формата даты'\n * @param {string} dueDate - дата в формате iso-date\n * @param {string} dateFormat - в какой формат перевести\n * @returns {string} человеческая дата\n */\nexport const humanizeTaskDueDate = (dueDate, dateFormat) => dueDate ? dayjs(dueDate).format(dateFormat) : '';\n\n/**\n * @description Функция добавляет 0 в начало значения, если значение меньше 10\n * @param {Number} min\n * @param {Number} max\n * @returns {string}\n */\nexport const createDateMonth = (min, max) => {\n  const month = getRandomIntInclusive(min, max);\n  return month < 10 ? `0${month}` : `${month}`;\n};\n\n/**\n * @description Генерация рандомной даты\n * @returns {string}\n */\nexport const generateRandomDate = () => {\n  const randomYear = getRandomIntInclusive(1900, 2023);\n  const randomMonth = createDateMonth(1, 12);\n  const randomDay = createDateMonth(1, 31);\n\n  return `${randomYear}-${randomMonth}-${randomDay}`;\n};\n\n/**\n * @description Получние части переданного массива\n * @param {Array} arr - массив\n * @returns {Array}\n */\nexport const getRandomArray = (arr) => {\n  const rand = getRandomIntInclusive(1, arr.length);\n  const newArr = [];\n\n  while (newArr.length !== rand) {\n    const elem = arr[getRandomIntInclusive(0, arr.length - 1)];\n    if (newArr.indexOf(elem) === -1) {\n      newArr.push(elem);\n    }\n  }\n\n  return newArr;\n};\n\n/**\n * @description Функция конвертирует запись минут в часы и минуты\n * {@link https://www.cyberforum.ru/javascript/thread938011.html}\n * @param {Number} time\n * @returns {string}\n */\nexport const getTimeInMinute = (time) => {\n  // Если меньше 60, то выводим только минуты\n  if (time < 60) {\n    return `${time}m`;\n  }\n\n  // Если остаток от деления 0, то выводим только часы\n  if (time % 60 === 0) {\n    const hours = time / 60;\n    return `${hours}h`;\n  }\n\n  // Если поделилось с остатком, то выводим часы и минуты\n  if (time % 60 !== 0) {\n    const minutes = time % 60;\n    const hours = (time - minutes) / 60;\n\n    return `${hours}h ${minutes}m`;\n  }\n};\n\n/**\n * @description Функция возвращает часть копии исходного массива\n * @param {array} array - массив с данными\n * @returns {array} - часть копии исходного массива\n */\nexport const getRandomArrayPart = (array) => {\n  const max = getRandomIntInclusive(0, array.length - 1);\n  const min = getRandomIntInclusive(0, max);\n  return array.slice(min, max + 1);\n};\n\n/**\n * @description Добавление класса к элементу (Если true - добавляем класс, false - ничего ни делаем)\n * @param {boolean} element - булево значение\n * @param {string} className - класс, который нужно добавить\n * @returns\n */\nexport const changeClassName = (element, className) => element ? className : '';\n\n/**\n * @description Функция помещает задачи без даты в конце списка,\n возвращая нужный вес для колбэка sort\n * @param {string} dateA\n * @param {string} dateB\n * @returns\n */\nexport function getWeightForNullDate(dateA, dateB) {\n  // Когда даты нет. Т.е. даты фильмов равны\n  if (dateA === null && dateB === null) {\n    return 0;\n  }\n\n  if (dateA === null) {\n    return 1;\n  }\n\n  if (dateB === null) {\n    return -1;\n  }\n\n  return null;\n}\n\n/**\n * @description Сортировка даты по возрастанию\n * @param {Object} filmDateA\n * @param {Object} filmDateB\n * @returns\n */\nexport function sortFilmDateUp(filmDateA, filmDateB) {\n  const weight = getWeightForNullDate(filmDateA.filmInfo.release.date, filmDateB.filmInfo.release.date);\n\n  return weight ?? dayjs(filmDateA.filmInfo.release.date).diff(dayjs(filmDateB.filmInfo.release.date));\n}\n\n/**\n * @description Сортировка даты по убыванию\n * @param {Object} filmDateA\n * @param {Object} filmDateB\n * @returns\n */\nexport function sortFilmDateDown(filmDateA, filmDateB) {\n  const weight = getWeightForNullDate(filmDateA.filmInfo.release.date, filmDateB.filmInfo.release.date);\n\n  return weight ?? dayjs(filmDateB.filmInfo.release.date).diff(dayjs(filmDateA.filmInfo.release.date));\n}\n\nexport function updateItem(items, update) {\n  return items.map((item) => item.id === update.id ? update : item);\n}\n\n// export const filterMovieCards = (movieCard, filterType) => movieCard.userDetails.filterType === true;\n","import AbstractView from './abstract-view.js';\n\n/**\n * Абстрактный класс представления с состоянием\n */\nexport default class AbstractStatefulView extends AbstractView {\n  /** @type {Object} Объект состояния */\n  _state = {};\n\n  /**\n   * Метод для обновления состояния и перерисовки элемента\n   * @param {Object} update Объект с обновлённой частью состояния\n   */\n  updateElement = (update) => {\n    if (!update) {\n      return;\n    }\n\n    this._setState(update);\n\n    this.#rerenderElement();\n  };\n\n  /**\n   * Метод для восстановления обработчиков после перерисовки элемента\n   * @abstract\n   */\n  _restoreHandlers = () => {\n    throw new Error('Abstract method not implemented: restoreHandlers');\n  };\n\n  /**\n   * Метод для обновления состояния\n   * @param {Object} update Объект с обновлённой частью состояния\n   */\n  _setState = (update) => {\n    this._state = {...this._state, ...update};\n  };\n\n  /** Метод для перерисовки элемента */\n  #rerenderElement = () => {\n    const prevElement = this.element;\n    const parent = prevElement.parentElement;\n    this.removeElement();\n\n    const newElement = this.element;\n\n    parent.replaceChild(newElement, prevElement);\n\n    this._restoreHandlers();\n  };\n}\n","// import { createElement } from '../render.js';\nimport AbstractStatefulView  from '../framework/view/abstract-stateful-view.js';\nimport { humanizeTaskDueDate, DATE_FORMAT_D_M_Y, changeClassName } from '../utils.js';\n\n/**\n * @description Создание пользовательских комментариев\n * @param {Array} comments - массив\n * @returns {string}\n */\nconst createUserCommentTemplate = (comments) => comments.map((comment) =>\n  `\n  <li class=\"film-details__comment\">\n    <span class=\"film-details__comment-emoji\">\n      <img src=\"./images/emoji/${comment.emotion}.png\" width=\"55\" height=\"55\" alt=\"emoji-${comment.emotion}\">\n    </span>\n    <div>\n      <p class=\"film-details__comment-text\">${comment.comment}</p>\n      <p class=\"film-details__comment-info\">\n        <span class=\"film-details__comment-author\">${comment.author}</span>\n        <span class=\"film-details__comment-day\">2019/12/31 23:59</span>\n        <button class=\"film-details__comment-delete\">Delete</button>\n      </p>\n    </div>\n  </li>\n`).join('');\n\n// Вызов arr.join('') делает в точности противоположное split. Он создаёт строку из элементов массива arr, вставляя '' между ними.\n/**\n * @description Функция создает шаблон для жанров фильма\n * @param {Array} genres - массив\n * @returns {string} - строка (html элемент)\n */\nconst createFilmGenresTemplate = (genres) => genres.map((genre) => `<span class=\"film-details__genre\"> ${genre}</> `).join('');\n\n\n/**\n * @description Шаблон описания фильма (попап)\n * @returns {string}\n */\nconst createFilmDetailsPopupTemplate = (movieDetails, movieComments) => {\n  const { comments, filmInfo, userDetails } = movieDetails;\n\n  // console.log(movieDetails);\n  // console.log(movieDetails.userComments);\n  // console.log(movieComments);\n\n  // Сопоставление комментариев и фильма по id\n  const filmComments = [];\n\n  comments.forEach((id) => {\n    movieComments.find((comment) => {\n      if (comment.id === id) {\n        filmComments.push(comment);\n      }\n    });\n  });\n\n  // Жанры фильмов\n  const filmGenres = createFilmGenresTemplate(filmInfo.genre);\n\n  // Комментарии к фильму\n  const userComments = createUserCommentTemplate(filmComments);\n\n  // Класс для выделения действий с фильмом\n  const activeClass = 'film-details__control-button--active';\n\n  return (\n    `\n      <section class=\"film-details\">\n        <form class=\"film-details__inner\" action=\"\" method=\"get\">\n          <div class=\"film-details__top-container\">\n            <div class=\"film-details__close\">\n              <button class=\"film-details__close-btn\" type=\"button\">close</button>\n            </div>\n            <div class=\"film-details__info-wrap\">\n              <div class=\"film-details__poster\">\n                <img class=\"film-details__poster-img\" src=\"${filmInfo.poster}\" alt=\"${filmInfo.title}\">\n\n                  <p class=\"film-details__age\">${filmInfo.ageRating}+</p>\n              </div>\n\n              <div class=\"film-details__info\">\n                <div class=\"film-details__info-head\">\n                  <div class=\"film-details__title-wrap\">\n                    <h3 class=\"film-details__title\">${filmInfo.alternativeTitle}</h3>\n                    <p class=\"film-details__title-original\">Original: ${filmInfo.title}</p>\n                  </div>\n\n                  <div class=\"film-details__rating\">\n                    <p class=\"film-details__total-rating\">${filmInfo.totalRating}</p>\n                  </div>\n                </div>\n\n                <table class=\"film-details__table\">\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Director</td>\n                    <td class=\"film-details__cell\">${filmInfo.director}</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Writers</td>\n                    <td class=\"film-details__cell\">${filmInfo.writers}</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Actors</td>\n                    <td class=\"film-details__cell\">${filmInfo.actors}</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Release Date</td>\n                    <td class=\"film-details__cell\">${humanizeTaskDueDate(filmInfo.release.date, DATE_FORMAT_D_M_Y)}</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Runtime</td>\n                    <td class=\"film-details__cell\">${filmInfo.runtime}</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Country</td>\n                    <td class=\"film-details__cell\">${filmInfo.release.releaseCountry}</td>\n                  </tr>\n                  <tr class=\"film-details__row\">\n                    <td class=\"film-details__term\">Genres</td>\n                    <td class=\"film-details__cell\">\n                      ${filmGenres}\n                  </tr>\n                </table>\n\n                <p class=\"film-details__film-description\">\n                  ${filmInfo.description}\n                </p>\n              </div>\n            </div>\n\n            <section class=\"film-details__controls\" data-film-details__controls>\n              <button type=\"button\" class=\"film-details__control-button film-details__control-button--watchlist ${changeClassName(userDetails.watchlist, activeClass)}\" id=\"watchlist\" name=\"watchlist\">Add to watchlist</button>\n              <button type=\"button\" class=\"film-details__control-button film-details__control-button--watched ${changeClassName(userDetails.alreadyWatched, activeClass)}\" id=\"watched\" name=\"watched\">Already watched</button>\n              <button type=\"button\" class=\"film-details__control-button film-details__control-button--favorite ${changeClassName(userDetails.favorite, activeClass)}\" id=\"favorite\" name=\"favorite\">Add to favorites</button>\n            </section>\n          </div>\n\n          <div class=\"film-details__bottom-container\">\n            <section class=\"film-details__comments-wrap\">\n              <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n\n              <ul class=\"film-details__comments-list\">\n                ${userComments}\n              </ul>\n\n              <div class=\"film-details__new-comment\">\n                <div class=\"film-details__add-emoji-label\" data-film-details__add-emoji-label></div>\n\n                <label class=\"film-details__comment-label\">\n                  <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\"></textarea>\n                </label>\n\n                <div class=\"film-details__emoji-list\" data-film-details__emoji-list>\n                  <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"smile\">\n                    <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n                      <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                    </label>\n\n                    <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"sleeping\">\n                      <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n                        <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                      </label>\n\n                      <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-puke\" value=\"puke\">\n                        <label class=\"film-details__emoji-label\" for=\"emoji-puke\">\n                          <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                        </label>\n\n                        <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"angry\">\n                          <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n                            <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                          </label>\n                        </div>\n                      </div>\n                    </section>\n                </div>\n              </form>\n            </section>\n            `\n  );\n};\n\nexport default class FilmDetailsView extends AbstractStatefulView  {\n  // element - делаем приватным т.к. он нам нужен только внутри класса\n  // #element = null;\n\n  #movieDetails = null;\n  #movieComments = null;\n\n  /**\n   * @param {Object} movieDetails - инфо карточки фильма\n   * @param {Array} movieComments - массив со всеми комментами\n   * @param {function} changeMovieGroup - колбек функция по изменению группы фильма\n   */\n  constructor(movieDetails, movieComments, changeMovieGroup) {\n    /* Конструкторы в наследуемых классах должны обязательно вызывать super(...), и делать это перед использованием this.. */\n    super();\n    this.#movieDetails = movieDetails;\n    this.#movieComments = movieComments;\n\n    // Передадим функцию обработчик изменения группы фильма(избранное, просмотренное...) через конструктор\n    this._callback.movieGroupBtnClick = changeMovieGroup;\n    // Используем делегирование\n    this.element.querySelector('[data-film-details__controls]').addEventListener('click', this.#onChangeMovieGroup);\n    // console.log(this)\n  }\n\n  /**\n   * @description Публичный метод для установки обработчика на крестик для закрытия попапа фильма\n   * @param {function} callback\n   */\n  setMoviePopupCloseHandler = (callback) => {\n    this._callback.closeBtnClick = callback;\n\n    this.element.querySelector('.film-details__close-btn')\n      .addEventListener('click', this.#onMoviePopupCloseBtnClick);\n  };\n\n  /**\n   * @description Функция для передачи в обработчик события на закрытие попапа фильма при нажатии на крестик\n   */\n  #onMoviePopupCloseBtnClick = () => {\n    this._callback.closeBtnClick();\n  };\n\n  /**\n   * @description Обработчик клика по изменению группы фильма(избранное, просмотренное...)\n   * @param {object} evt\n   */\n  #onChangeMovieGroup = (evt) => {\n    // Проверка, что пользователь кликает по кнопке\n    if (evt.target.tagName !== 'BUTTON') {\n      return;\n    }\n\n    // Передаем параметром атрибут name у кнопки\n    this._callback.movieGroupBtnClick(evt.target.name, evt);\n  };\n\n  /**\n   * @description Выбор смайлика к комменту\n   * @param {object} callback\n   */\n  setEmojiCommentChoice = (callback) => {\n    this._callback.emojiChoice = callback;\n\n    this.element.querySelector('[data-film-details__emoji-list]').addEventListener('click', this.#onEmojiCommentChoice);\n  };\n\n  /**\n   * @description Обработчик изменения смайлика\n   */\n  #onEmojiCommentChoice = (evt) => {\n    if (evt.target.tagName !== 'INPUT') {\n      return;\n    }\n\n    this._callback.emojiChoice(evt.target.value);\n  };\n\n  get template() {\n    return createFilmDetailsPopupTemplate(this.#movieDetails, this.#movieComments);\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // /**\n  //  * @description Удаление ссылки на элемент\n  //  */\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n","import FilmDetailsView from '../view/film-details-view';\nimport { render, remove, replace } from '../framework/render.js';\nimport { MovieGroup } from '../const.js';\n// import MovieCardView from '../view/movie-card-view';\nimport { updateItem } from '../utils';\n// import MovieCardPresenter from './movie-card-presenter';\n\nconst body = document.body;\n\nexport default class FilmDetailsPopupPresenter {\n  // #filmCardInfo = null;\n  #filmComments = [];\n  #container = null;\n  #filmCard = null;\n\n  #filmDetailsView = null;\n  #movieCardView = null;\n  // #movieCardPresenter = new MovieCardPresenter();\n\n  onMovieCardChange = null;\n\n  /**\n   *\n   * @param {Function} onMovieChange - перерисовка карточки фильма\n   */\n  constructor({ onMovieChange }) {\n    this.onMovieCardChange = onMovieChange;\n    // console.log(this.onMovieCardChange)\n  }\n\n  /**\n   * @description Удаление/добавление фильма в группу. Колбек функция по изменению флага (булева значения у карточки фильма - просмотрен ли фильм?, в избранном?... )\n   * @param {string} movieGroup - выбранная группа (watchlist, watched, favorites)\n   */\n  #handleMovieGroupChange = (movieGroup, evt) => {\n    // Используем switch конструкцию для удаление/добавление фильма в группу\n    switch (movieGroup) {\n      case MovieGroup.WATCHLIST:\n        // обновить моки\n        this.#filmCard.userDetails.watchlist = !this.#filmCard.userDetails.watchlist;\n\n        // вызвать обновление конкретного фильма.\n        this.onMovieCardChange(this.#filmCard);\n        this.updatePopup(this.#filmCard);\n\n        // replace(this.#filmDetailsView, this.#filmDetailsView)\n\n        // console.log(this.#movieCardView)\n        console.log(this.#filmDetailsView.element)\n        // console.log(this.#filmCard)\n        // console.log(this)\n        // console.log(evt)\n        // console.log(this.#movieCardPresenter)\n        // this.#movieCardPresenter.destroy();\n\n        break;\n      case MovieGroup.ALREADYWATCHED:\n        this.#filmCard.userDetails.alreadyWatched = !this.#filmCard.userDetails.alreadyWatched;\n\n        this.onMovieCardChange(this.#filmCard);\n        this.updatePopup(this.#filmCard);\n\n        break;\n      case MovieGroup.FAVOURITE:\n        this.#filmCard.userDetails.favorite = !this.#filmCard.userDetails.favorite;\n\n        this.onMovieCardChange(this.#filmCard);\n        this.updatePopup(this.#filmCard);\n        break;\n    }\n  };\n\n  /**\n   * @description Выбор смайлика и подстановка в DOM\n   * @param {string} type - тип смайлика\n   */\n  #selectEmojiComment = (type) => {\n    const urlEmojie = `<img src=\"./images/emoji/${type}.png\" width=\"55\" height=\"55\" alt=\"${type}\"></img>`;\n    const emojieContainer = this.#filmDetailsView.element.querySelector('.film-details__add-emoji-label');\n\n    if (emojieContainer.firstChild !== null) {\n      emojieContainer.removeChild(emojieContainer.firstChild);\n    }\n\n    emojieContainer.insertAdjacentHTML('afterbegin', urlEmojie);\n  };\n\n  /**\n   * @description Обновление попапа при изменени данных\n   * @param {object} movieCard\n   */\n  updatePopup = (movieCard) => {\n    this.prevPopup = this.#filmDetailsView;\n\n    // console.log(this.prevPopup)\n\n    this.#createPopup(movieCard);\n\n    // console.log(this.#filmDetailsView)\n\n    replace(this.#filmDetailsView, this.prevPopup);\n  };\n\n  /**\n   * @description Отрисовка попапа фильма\n   * @param {object} filmCardInfo - обьект инфо о фильме\n   * @param {Array} filmComments - массив всех комментов\n   */\n  #createPopup = (movie) => {\n\n    this.#filmDetailsView = new FilmDetailsView(\n      movie,\n      this.#filmComments,\n      this.#handleMovieGroupChange\n    );\n\n    // if (prevPopupView === null) {\n    //   return;\n    // }\n\n    /**\n    * @description Действия, которые нужно сделать при нажатии на крестик в попапе (закрыть попап)\n    */\n    const closeFilmDetailsPopup = () => {\n      remove(this.#filmDetailsView);\n      body.classList.remove('hide-overflow');\n\n      document.removeEventListener('keydown', onEscKeyPress);\n    };\n\n    /**\n     * @description Закрытие попапа при нажатии на Escape\n     * @param {object} evt\n     */\n    function onEscKeyPress(evt) {\n      if (evt.key === 'Escape') {\n        // Отменяем действие по умолчанию у клавиши Escape (на MacOs - Escape выводит окна из полноэкранного режима)\n        evt.preventDefault();\n        closeFilmDetailsPopup();\n      }\n    }\n\n    // Добавлние обработчкика на удаление попапа при нажатии на Escape\n    document.addEventListener('keydown', onEscKeyPress);\n\n    // Добавление обработчика на удаление попапа при нажатии на крестик\n    this.#filmDetailsView.setMoviePopupCloseHandler(closeFilmDetailsPopup);\n\n    this.#filmDetailsView.setEmojiCommentChoice(this.#selectEmojiComment);\n  };\n\n  destroy() {\n    remove(this.#filmDetailsView);\n    // body.classList.remove('hide-overflow');\n  }\n\n  /**\n   *\n   * @param {Object} filmCard - карточка фильма\n   * @param {Object} filmComments - все комментарии, которые пришли с сервера\n   * @param {HTMLElement} container\n   */\n  init = (filmCard, filmComments, container) => {\n    this.#filmCard = filmCard;\n    this.#filmComments = filmComments;\n    this.#container = container;\n\n    // const prevFilmDetailsPopup = this.#filmDetailsView;\n    // console.log(this.#filmDetailsView)\n\n    this.#createPopup(this.#filmCard);\n\n    render(this.#filmDetailsView, this.#container);\n    body.classList.add('hide-overflow');\n  };\n}\n\n\n/*\n\nПри инициалилации попапа (this.#filmDetailsPopupPresenter.init) идёт:\n- отрисовка попапа\n- добавление обработчика на крестик\n- --//--                 на кнопку Escape\n*/\n","// import { createElement } from '../render.js';\nimport AbstractView from '../framework/view/abstract-view.js';\nimport { humanizeTaskDueDate, DATE_FORMAT_Y } from '../utils.js';\n\n\n/**\n * @description Шаблон карточки фильма\n * @returns {string}\n */\nconst createMovieCardTemplate = (movieInfo) => {\n  const { filmInfo, comments, userDetails } = movieInfo;\n\n  // Проверка на наличие даты\n  const date = filmInfo.release.date !== null ? humanizeTaskDueDate(filmInfo.release.date, DATE_FORMAT_Y) : '';\n\n  // Добавлен ли фильм в список для просмотра в будущем\n  const watchlistClassName = userDetails.watchlist ? 'film-card__controls-item--active' : '';\n\n  // Просмотрен ли фильм\n  const alreadyWatchedClassName = userDetails.alreadyWatched ? 'film-card__controls-item--active' : '';\n\n  // Находится ли фильм в избранном\n  const favoriteClassName = userDetails.favorite ? 'film-card__controls-item--active' : '';\n\n  // console.log(date)\n\n  return (\n    `\n<article class=\"film-card\">\n  <a class=\"film-card__link\">\n    <h3 class=\"film-card__title\">${filmInfo.title}</h3>\n    <p class=\"film-card__rating\">${filmInfo.totalRating}</p>\n    <p class=\"film-card__info\">\n      <span class=\"film-card__year\">${date}</span>\n      <span class=\"film-card__duration\">${filmInfo.runtime}</span>\n      <span class=\"film-card__genre\">${filmInfo.genre}</span>\n    </p>\n    <img src=${filmInfo.poster} alt=\"${filmInfo.title}\" class=\"film-card__poster\">\n    <p class=\"film-card__description\">${filmInfo.description}</p>\n    <span class=\"film-card__comments\">${comments.length} comments</span>\n  </a>\n  <div class=\"film-card__controls\">\n    <button class=\"film-card__controls-item film-card__controls-item--add-to-watchlist ${watchlistClassName}\" type=\"button\" data-add-to-watchlist>Add to watchlist</button>\n    <button class=\"film-card__controls-item film-card__controls-item--mark-as-watched ${alreadyWatchedClassName}\" type=\"button\" data-mark-as-watched>Mark as watched</button>\n    <button class=\"film-card__controls-item film-card__controls-item--favorite ${favoriteClassName}\" type=\"button\" data-mark-as-favorite>Mark as favorite</button>\n  </div>\n</article>\n`\n  );\n};\n\nexport default class MovieCardView extends AbstractView {\n  // #element = null;\n\n  // Один обьект (фильм)\n  #filmCard = null;\n\n  // Передаем карточку фильма\n  constructor(filmCard) {\n    super();\n    // Карточка фильма\n    this.#filmCard = filmCard;\n  }\n\n  /**\n   * @description Публичный метод добавляет обработчик события на элемент (открытие попапа при клике на карточку)\n   */\n  setMovieCardClickHandler = (callback) => {\n    // Записали callback функцию в обьект, чтобы в дальнейшем можно было удалить обработчик события\n    this._callback.clickOnMovieCard = callback;\n\n    // На каждую карточку добавили обработчик события\n    this.element.querySelector('.film-card__link')\n      .addEventListener('click', this.#onMovieCardClick);\n  };\n\n  /**\n   * @description Открытие попапа по клику на фильм\n   * @param {object} evt\n   */\n  #onMovieCardClick = (evt) => {\n    evt.preventDefault();\n\n    // В функцию обработчик, параметром передаём карточку фильма\n    // this._callback.click = #openFilmDetailsPopup(filmCard)\n    // !!! this.#filmCard - содержит карточку фильма по которой кликнул пользователь\n    this._callback.clickOnMovieCard(this.#filmCard);\n  };\n\n  /**\n   * @description Метод для добавления обработчика на элемент (кнопка 'Добавить фильм в список будущих просмотров')\n   * @param {Function} callback\n   */\n  setWatchlistClickHandler = (callback) => {\n    this._callback.clickOnWatchlistBtn = callback;\n\n    this.element.querySelector('[data-add-to-watchlist]')\n      .addEventListener('click', this.#onWatchlistBtnClick);\n  };\n\n  /**\n   * @description Функция обработчик события 'Добавить фильм в просмотренные'\n   */\n  #onWatchlistBtnClick = () => {\n    this._callback.clickOnWatchlistBtn();\n  };\n\n  /**\n   * @description Метод для добавления обработчика на элемент (кнопка 'Добавить фильм в список будущих просмотров')\n   * @param {Function} callback\n   */\n  setAlreadyWatchedClickHandler = (callback) => {\n    this._callback.clickOnAlreadyWatchedBtn = callback;\n\n    this.element.querySelector('[data-mark-as-watched]')\n      .addEventListener('click', this.#onAlreadyWatchedBtnClick);\n  };\n\n  /**\n   * @description Функция обработчик события 'Добавить фильм в просмотренные'\n   */\n  #onAlreadyWatchedBtnClick = () => {\n    this._callback.clickOnAlreadyWatchedBtn();\n  };\n\n  /**\n   * @description Метод для добавления обработчика на элемент (кнопка 'Добавить фильм в избранное')\n   * @param {Function} callback\n   */\n  setFavoriteClickHandler = (callback) => {\n    this._callback.clickOnFavoriteBtn = callback;\n\n    this.element.querySelector('[data-mark-as-favorite]')\n      .addEventListener('click', this.#onFavoriteBtnClick);\n  };\n\n  /**\n   * @description Функция обработчик события 'Добавить фильм в избранное'\n   */\n  #onFavoriteBtnClick = () => {\n    this._callback.clickOnFavoriteBtn();\n  };\n\n  get template() {\n    return createMovieCardTemplate(this.#filmCard);\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n\n/*\n!!! ============= !!! Небольшое пояснение к view-шке\nШаблон карточки фильма - разметка\n\nОтвечает за добавление обработчиков событий на элементы - только на те элементы, которые относятся к шаблону данного View\n\n\nДобавление обработчика события - нажатие по кнопке 'Добавить в избранное'\n\n- Создаём публичный метод для добавления обработчика на нужный нам элемент с параметром в который принимаем колбек функцию.\n- Колбек функцию записываем в созданный заранее обьект (_callback) с ключом click, чтобы была возможность в дальнейшем удалить эту колбек функцию.... все дело в передачи функции и сохранении ссылки на неё.\n- Создаём функцию обработчик по клику и вызываем уже в этой функции обработчик события\n\n- В презентере карточки фильма описываем логику по нажатию кнопки и эту функцию(метод) передаём колбеком через публичный метод view-шки карточки фильма\n\nЛогика.\n- При нажатии на кнопку - считываем карточку по которой кликнули и id этой карточки\n\n\n*/\n","import { render, remove, replace } from '../framework/render.js';\nimport MovieCardView from '../view/movie-card-view.js';\n\nexport default class MovieCardPresenter {\n  container = null;\n  movieCard = null;\n\n  movieCardView = null;\n  prevMovieCardView = null;\n\n  /**\n   *\n   * @param {HTMLElement} container - место куда отрисовываем карточки\n   * @param {function} openFilmPopup - Обработчик клика по карточке - открытие попапа\n   * @param {function} onMovieChange - Действия (функция) при изменении группы фильма (избранное, просмотренное...)\n   */\n  constructor(container, openFilmPopup, {onMovieChange}) {\n    this.container = container;\n    this.openFilmPopup = openFilmPopup;\n    this.onMovieChange = onMovieChange;\n  }\n\n  /**\n   * @description  Опишем (метод) обработчик клика по кнопке \"Добавить фильм в список будущих просмотров\"\n   */\n  #addFilmToWatchlist = () => {\n    // Меняем булево значение на противоположное\n    this.movieCard.userDetails.watchlist = !this.movieCard.userDetails.watchlist;\n\n    this.onMovieChange(this.movieCard);\n  };\n\n  /**\n   * @description  Опишем (метод) обработчик клика по кнопке \"Добавить фильм в просмотренные\"\n   */\n  #addFilmToAlreadyWatched = () => {\n    // Меняем булево значение на противоположное\n    this.movieCard.userDetails.alreadyWatched = !this.movieCard.userDetails.alreadyWatched;\n\n    this.onMovieChange(this.movieCard);\n  };\n\n  /**\n   *@description  Опишем (метод) обработчик клика по кнопке \"Добавить фильм в избранное\"\n   */\n  #addFilmToFavorite = () => {\n    // Меняем булево значение на противоположное\n    this.movieCard.userDetails.favorite = !this.movieCard.userDetails.favorite;\n\n    this.onMovieChange(this.movieCard);\n  };\n\n  /**\n   * @description Создаем элемент (карточку фильма) и вешаем обработчики\n   * @param {object} filmCard\n   */\n  #createMovieCard = (filmCard) => {\n    this.movieCardView = new MovieCardView(filmCard);\n\n    // Передача функции обработчика клика по карточке\n    this.movieCardView.setMovieCardClickHandler(this.openFilmPopup);\n\n    // (Передадим из презентера задачи в представление обработчик)\n\n    // Передача функции обработчика клика по кнопке - 'Добавить фильм в список будущих просмотров'\n    this.movieCardView.setWatchlistClickHandler(this.#addFilmToWatchlist);\n    // ... 'Добавить фильм в просмотренные'\n    this.movieCardView.setAlreadyWatchedClickHandler(this.#addFilmToAlreadyWatched);\n    // ... 'Добавить фильм в избранное'\n    this.movieCardView.setFavoriteClickHandler(this.#addFilmToFavorite);\n  };\n\n  /**\n   * @description Меняем карточку на новую при изменении пользователем данных\n   * @param {object} updateMovie\n   */\n  updateMovieCard = (updateMovie) => {\n    this.prevMovieCardView = this.movieCardView;\n\n    this.#createMovieCard(updateMovie);\n\n    replace(this.movieCardView, this.prevMovieCardView);\n  };\n\n  /**\n  * @description Метод для удаление компонента (карточки фильма)\n  */\n  destroy() {\n    remove(this.movieCardView);\n  }\n\n  /**\n   * @description Инициализация (рендер) карточки фильма\n   * @param {object} movieCard - карточка фильма\n   */\n  init(movieCard) {\n    this.movieCard = movieCard;\n\n    this.#createMovieCard(movieCard);\n\n    // console.log('this.prevMovieCardView', this.prevMovieCardView)\n    // console.log(this.movieCardView)\n\n    render(this.movieCardView, this.container);\n  }\n}\n\n/*\n\nИнициализация (рендер) карточки фильма с помощью метода init\n\nКарточка фильма - логика событий, действия по наступлении событий, реакция на действия пользователя (только то, что относится к карточке фильма)\n\n\n!!! ООП - это про организацию кода. Она не влияет на архитектуру.\nМы можем строить архитектуру, как с помощью ООП, так и с помощью функционального подхода\n!!! За архитектуру отвечает отдельный патерн. К примеру MVP, как у в этом проекте. (Паттерны MV* работают примерно одинаково и отличаются лишь тем, как у нас идёт поток данных)\n*/\n","// import { createElement } from '../render.js';\n\nimport { FilterType } from '../const.js';\nimport AbstractView from '../framework/view/abstract-view.js';\n\n/**\n * @description Название класса, который добавляется при нажатии на фильтр\n */\nconst filterActiveClassName = 'main-navigation__item--active';\n\n/**\n * @description Общее количество фильмов добавленное в приложение (отоброжается в подвале)\n * @returns {string}\n */\nconst createMainNavTemplate = (movies, filterMovieType) => {\n  console.log(filterMovieType)\n  // console.log(movies)\n\n  const watchlist = movies.filter((movie) => movie.userDetails.watchlist === true);\n  const alreadyWatched = movies.filter((movie) => movie.userDetails.alreadyWatched === true);\n  const favorite = movies.filter((movie) => movie.userDetails.favorite === true);\n\n  return (\n    `\n<nav class=\"main-navigation\">\n  <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active ${FilterType.DEFAULT === filterMovieType ? filterActiveClassName : ''}\" data-filter-type=\"${FilterType.DEFAULT}\">All movies</a>\n  <a href=\"#watchlist\" class=\"main-navigation__item ${FilterType.WATCHLIST === filterMovieType ? filterActiveClassName : ''}\" data-filter-type=\"${FilterType.WATCHLIST}\">\n    Watchlist\n    <span class=\"main-navigation__item-count\">${watchlist.length}</span>\n  </a>\n  <a href=\"#history\" class=\"main-navigation__item ${FilterType.ALREADYWATCHED === filterMovieType ? filterActiveClassName : ''}\" data-filter-type=\"${FilterType.ALREADYWATCHED}\">\n    History\n    <span class=\"main-navigation__item-count\">${alreadyWatched.length}</span>\n  </a>\n  <a href=\"#favorites\" class=\"main-navigation__item ${FilterType.FAVOURITES === filterMovieType ? filterActiveClassName : ''}\" data-filter-type=\"${FilterType.FAVOURITES}\">\n    Favorites\n   <span class=\"main-navigation__item-count\">${favorite.length}</span>\n  </a>\n</nav>\n  `);\n};\n\nexport default class FilterMovieView extends AbstractView {\n  // #element = null;\n  filterMovieType;\n\n  #value;\n\n  constructor(movies) {\n    super();\n    this.movies = movies;\n    // console.log(movies)\n    // this.#filterType = filterType;\n  }\n\n  get value() {\n    return this.#value;\n  }\n\n  set value(newValue) {\n    this.#value = newValue;\n  }\n\n  /**\n   * @description Публичный метод для установки обработчика на элемент и передачи колбек функции\n   * @param {Function} callback\n   */\n  setFilterListClickHandler = (callback) => {\n    this._callback.click = callback;\n\n    // Используем один обработчик и делегирование\n    this.element.addEventListener('click', this.#onFilterBtnClick);\n  };\n\n  /**\n   * @description !!! Функция должна быть стрелочная, иначе this._callback.click будет undefined\n   * @param {object} evt\n   * @returns Если клик был НЕ по ссылке (типу фильтра) - выходим из функции\n   */\n  #onFilterBtnClick = (evt) => {\n    // Добавим проверку на тег \"а\", чтобы клики по блоку фильтрации не вызывали колбэк\n    if (evt.target.tagName !== 'A') {\n      return;\n    }\n\n    evt.preventDefault();\n\n    // Находим элемент с активным классом и убираем его\n    this.element.querySelector('.main-navigation__item--active')\n      .classList.remove('main-navigation__item--active');\n    // Добавляем класс active активному элементу\n    evt.target.classList.toggle('main-navigation__item--active');\n\n    this.value = evt.target.dataset.filterType;\n    // console.log(this)\n    this._callback.click(evt.target.dataset.filterType);\n  };\n\n  get template() {\n    return createMainNavTemplate(this.movies);\n  }\n\n  // get element() {\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n","import CommonFilmsSectionView from '../view/common-films-section-view.js';\nimport MainFilmsListSectionView from '../view/main-films-list-section-view.js';\nimport MovieCardContainerView from '../view/movie-card-container-view.js';\nimport ShowMoreBtnView from '../view/show-more-btn-view.js';\nimport EmptyFilmListView from '../view/empty-film-list.js';\n// import FilmDetailsView from '../view/film-details-view.js';\nimport ListSortView from '../view/list-sort-view.js';\n// import MovieCardView from '../view/movie-card-view.js';\nimport TotalQuantityFilmsView from '../view/total-quantity-films-view.js';\n\nimport { sortFilmDateDown, updateItem } from '../utils.js';\n\n// import { render } from '../render.js';\nimport { render, remove, replace } from '../framework/render.js';\n\nimport FilmDetailsPopupPresenter from './film-details-popup-presenter.js';\n\nimport MovieCardPresenter from './movie-card-presenter.js';\n\nimport FilterMovieView from '../view/filter-movie-view.js';\nimport FilterMoviePresenter from './filter-movies-presenter.js';\n\nimport { FilterType } from '../const.js';\n\nimport { SortType } from '../const.js';\n\n\nconst body = document.body;\n\n/**\n * Main сайта\n */\nconst siteMainElement = document.querySelector('.main');\n\n/**\n * @description Секция со статистикой по фильмам - общее количество фильмов в подвале сайта\n */\nconst footerFilmStatistics = document.querySelector('.footer__statistics');\n\n/**\n * Количество фильмов при загрузке страницы и количество добавляемых фильмов при нажатии  на кнопку 'Показать ещё'\n * @param {number}\n */\nconst MOVIE_CARD_PER_STEP = 5;\n\n// !!! Методы класса советую читать снизу вверх\n// Главный презентер\nexport default class MovieBoardPresenter {\n\n  // !!! Прототипы классов идут в порядке расположения в DOM\n  // Сортировка\n  listSortView = new ListSortView();\n  // Главный (общий) section для фильмов\n  commonFilmsSectionView = new CommonFilmsSectionView();\n  // section с основными фильмами\n  #mainFilmsListSectionView = new MainFilmsListSectionView();\n  // Куда отрисовываем карточки с фильмами (контейнер для фильмов)\n  movieCardContainerView = new MovieCardContainerView();\n  // Заглушка при отсутствии фильмов\n  emptyFilmListView = new EmptyFilmListView();\n  // Кнопка 'показать ещё'\n  #showMoreBtnView = new ShowMoreBtnView();\n  // Попап фильма\n  // filmDetailsComponent = new FilmDetailsPresenter();\n\n\n  /**\n  * Счётчик отрисовки фильмов (по умолчанию при загрузке страницы показывается 5 карточек) *\n  * @param {number}\n  */\n  #renderFilmCardCount = MOVIE_CARD_PER_STEP;\n\n  filmDetailsPopupPresenter = null;\n  #filmCardComponent = null;\n  #filmDetailsView = null;\n  #movieCardPresenter = null;\n  // #totalQuantityFilmsView;\n\n  filterMovieView = null;\n\n  // Выбранный тип фильтра по умолчанию\n  #currentFilterType = FilterType.DEFAULT;\n\n  // Выбранный тип сортировки по умолчанию\n  #currentSortType = SortType.DEFAULT;\n\n  #FilterMoviePresenter;\n\n  // Контейнер для отрисовки\n  #filmsContainer = null;\n  // Обьект с информацией о фильме\n  #filmCardInfo = null;\n\n  // Карточки фильмов\n  #originalMovieCardsInfo = [];\n  // Копия карточек фильмов для фильтрации и сортировки\n  #copyMovieCardsInfo = [];\n  // Все комменты к фильмам\n  #userComments = [];\n\n\n  /* Map - коллекция для хранения данных любого типа в виде пар [ключ, значение], то есть каждое значение сохраняется по уникальному ключу, который потом используется для доступа к этому значению. Причём в качестве ключей тоже принимаются значения любого типа. */\n  /*\n  Заведем свойство #moviePresenters, где Board-презентер будет хранить ссылки на все MovieCardPresenter-ы\n  */\n  moviePresenters = new Map();\n  // console.log()\n\n  /**\n   * @param {HTMLElement} filmsContainer - в каком месте в DOM отрисовываем элемент\n   * @param {object} filmCardInfo - обьект с данными о фильме и комментариями (прототип класса FilmCardInfoModel)\n   */\n  constructor(filmsContainer, filmCardInfo) {\n    this.#filmsContainer = filmsContainer;\n\n    // filmCardInfo записываем в свойство класса\n    this.#filmCardInfo = filmCardInfo;\n  }\n\n  /**\n   * @description Заведем функцию сортировки\n   * @param {string} movieSortType - тип сортировки\n   */\n  #sortFilms = (movieSortType) => {\n    // метод sort() не создает новый объект Array, а производит сортировку переданного массива\n\n    // Опишем switch-блок с функциями сортировки\n    switch (movieSortType) {\n      case SortType.DATE:\n        this.#originalMovieCardsInfo.sort(sortFilmDateDown);\n        break;\n      case SortType.RATING:\n        this.#originalMovieCardsInfo.sort((movieCardA, movieCardB) => movieCardB.filmInfo.totalRating - movieCardA.filmInfo.totalRating);\n\n        // this.listSortView.element.querySelector(`[data-sort-type='${movieSortType}']`).classList.toggle('sort__button--active');\n        break;\n      default:\n        // когда пользователь захочет \"вернуть всё, как было\",\n        // мы просто запишем в originalMovieCardsInfo копию исходного массива\n        this.#originalMovieCardsInfo = [...this.#copyMovieCardsInfo];\n    }\n\n    this.#currentSortType = movieSortType;\n  };\n\n  /**\n   * @description Обработчик события по нажатию выбранной сортировки\n   * @param {string} sortType\n   */\n  #handleSortTypeChange = (sortType) => {\n    // Опишем в обработчике условие-оптимизацию, которое защитит от лишних перерисовок\n    if (this.#currentSortType === sortType) {\n      return;\n    }\n\n    // Сотрируем список\n    this.#sortFilms(sortType);\n    // - Очищаем список\n    this.#clearFilmsList();\n    // - Рендерим список заново\n    this.#renderFilms();\n  };\n\n  /**\n   * @description Отрисовка типов сортировки фильмов\n   */\n  #renderSortList = () => {\n    this.listSortView.setSortTypeChangeHandler(this.#handleSortTypeChange);\n\n    render(this.listSortView, this.#filmsContainer);\n  };\n\n  /**\n   * @description Показ карточек по клику на кнопку 'Показать ещё'\n   */\n  #onLoadMoreFilmCard = () => {\n    this.#originalMovieCardsInfo\n      .slice(this.#renderFilmCardCount, this.#renderFilmCardCount + MOVIE_CARD_PER_STEP)\n      .forEach((movieCard) => this.#renderFilmCard(movieCard, this.#userComments));\n\n    this.#renderFilmCardCount += MOVIE_CARD_PER_STEP;\n\n    /* Если значение счётчика больше, чем общее количество карточек - удали кнопку 'Показать ещё' */\n    if (this.#renderFilmCardCount >= this.#originalMovieCardsInfo.length) {\n      remove(this.#showMoreBtnView);\n    }\n  };\n\n  /**\n   * @description Отрисовка кнопки 'Показать ещё'\n   */\n  #renderShowMoreButton() {\n    // Если количество фильмов > 5, показываем кнопку 'показать ещё'\n    if (this.#originalMovieCardsInfo.length > MOVIE_CARD_PER_STEP) {\n\n      /*  Запишем функцию обработчика события по показу дополнительных фильмов в обьект и присвоим функции ключ onClick, (передача функции обработчика с помощью обьекта происходит на месте, а не в классе) - передадим функцию в класс ShowMoreBtnView */\n\n      // !!! Передаем функцию обработчик через конструктор\n      // this.#showMoreBtnView = new ShowMoreBtnView({\n      //   onClick: this.#onLoadMoreFilmCard\n      // });\n      // !!! Передаем функцию обработчик через публичный метод\n      this.#showMoreBtnView.setShowMoreBtnClickHandler(this.#onLoadMoreFilmCard);\n\n      render(this.#showMoreBtnView, this.#mainFilmsListSectionView.element);\n\n      // this.#clearFilmsList();\n    }\n  }\n\n  /**\n   * @description Перерисовка элемента.\n   * @param {object} updatedMovie\n   */\n  rerenderMovieCard = (updatedMovie) => {\n    // console.log(updatedMovie);\n    // console.log(this.#originalMovieCardsInfo);\n    console.log('ДО this.#originalMovieCardsInfo', this.#originalMovieCardsInfo);\n\n    this.#originalMovieCardsInfo = updateItem(this.#originalMovieCardsInfo, updatedMovie);\n    console.log('updatedMovie', updatedMovie);\n\n    console.log('this.#originalMovieCardsInfo', this.#originalMovieCardsInfo);\n\n    this.moviePresenters.get(updatedMovie.id).updateMovieCard(updatedMovie);\n    // console.log(this.moviePresenters.get(updatedMovie.id));\n\n    this.updateFilterView();\n  };\n\n  /**\n   * @description Метод проверяет, открыт ли попап фильма.\n   */\n  #isFilmDetailsPopupOpen = () => {\n    if (this.filmDetailsPopupPresenter !== null) {\n      this.filmDetailsPopupPresenter.destroy();\n      this.filmDetailsPopupPresenter = null;\n    }\n  };\n\n  /**\n   * @description Открытие попапа фильма при клике на карточку\n   * @param {object} filmCard - карточка фильма\n   */\n  #openFilmDetailsPopup = (filmCard) => {\n    this.#isFilmDetailsPopupOpen();\n\n    this.filmDetailsPopupPresenter = new FilmDetailsPopupPresenter({ onMovieChange: this.rerenderMovieCard });\n\n    // console.log(this.moviePresenters)\n\n    this.filmDetailsPopupPresenter.init(filmCard, this.#userComments, body);\n  };\n\n  /**\n   * @description Отрисовка одной карточки фильма\n   * @param {Object} filmCard - карточка фильма\n   */\n  #renderFilmCard = (filmCard) => {\n    this.#movieCardPresenter = new MovieCardPresenter(\n      this.movieCardContainerView.element,\n      this.#openFilmDetailsPopup,\n      { onMovieChange: this.rerenderMovieCard }\n    );\n\n    this.#movieCardPresenter.init(filmCard);\n\n    // Ключами для презентеров сделаем id фильма\n    this.moviePresenters.set(filmCard.id, this.#movieCardPresenter);\n  };\n\n  /**\n   * @description Метод рендерит карточки фильмов на страницу внутри себя вызывая метод renderFilmCard\n   */\n  #renderFilms = () => {\n    /* Math.min(this.#movieCardsInfo.length, MOVIE_CARD_PER_STEP) - подстраховываемся в отрисовке фильмов (если фильмов с сервера придёт меньше 5, то отрисуется то количество, которое пришло, а не 5) */\n    for (let i = 0; i < Math.min(this.#originalMovieCardsInfo.length, MOVIE_CARD_PER_STEP); i++) {\n      this.#renderFilmCard(this.#originalMovieCardsInfo[i], this.#userComments);\n    }\n\n    // console.log('рендер', this.#originalMovieCardsInfo)\n  };\n\n  /**\n   * @description Для дальнейшей работы - сортировки и фильтрации - нам нужно научить наш презентер очищать список фильмов\n   */\n  #clearFilmsList = () => {\n    // console.log(this.moviePresenters)\n    // Для очистки списка фильмов будем последовательно вызывать destroy у всех MovieCardPresenter-ов...\n    this.moviePresenters.forEach((presenter) => presenter.destroy());\n    // ...а после очистим всю Map, чтобы \"убить\" ссылки на MovieCardPresenter-ы, чтобы сборщик мусора их собрал.\n    this.moviePresenters.clear();\n    this.#renderFilmCardCount = MOVIE_CARD_PER_STEP;\n    // remove(this.#showMoreBtnView);\n    // console.log('очистка')\n  };\n\n  /**\n   * @description Метод рендерит общий контейнер для списка фильмов\n   */\n  #renderFilmsContainer() {\n    render(this.commonFilmsSectionView, this.#filmsContainer);\n    render(this.#mainFilmsListSectionView, this.commonFilmsSectionView.element);\n    render(this.movieCardContainerView, this.#mainFilmsListSectionView.element);\n  }\n\n  /**\n   * @description Метод рендерит заглушку в случае отсутствия фильмов\n   * !!! Хороший тон кода - один метод одно действие (разделение кода на методы)\n   */\n  #renderNoFilms() {\n    render(this.emptyFilmListView, this.#filmsContainer);\n  }\n\n  /**\n   * @description Функция сортировки. Реализует метод фильтрации\n   * // - Сортируем фильмы\n   * // - Очищаем список\n   * // - Рендерим список фильмов заново\n   * !!! .filter() возвращает новый массив, при этом исходный массив никак не изменится.\n   * @param {string} filterMovieType - тип фильтрации\n   */\n  #filterMovies = (filterMovieType) => {\n\n    // this.#originalMovieCardsInfo - оригинал карточек с фильмами\n    // this.#copyMovieCardsInfo - копия оригинала карточек с фильмами\n    // При фильтрации копии массива фильмов (this.#copyMovieCardsInfo), метод .filter() возвращает новый массив. И т.к. вся работа в методах происходит с оригиналом массива фильмов (this.#originalMovieCardsInfo) - мы перезаписываем его и передаем в методы уже отфильтрованный массив.\n\n    // Опишем switch-блок с функциями сортировки\n    switch (filterMovieType) {\n      case FilterType.WATCHLIST:\n        // console.log('WATCHLIST');\n        // console.log(this);\n        this.#originalMovieCardsInfo = this.#copyMovieCardsInfo.filter((movieCard) => movieCard.userDetails.watchlist === true);\n        this.filterMovieView.value = filterMovieType;\n        // console.log(this);\n\n        // console.log(this.#originalMovieCardsInfo);\n        break;\n      case FilterType.ALREADYWATCHED:\n        // console.log('ALREADYWATCHED');\n        // console.log(this);\n        this.#originalMovieCardsInfo = this.#copyMovieCardsInfo.filter((movieCard) => movieCard.userDetails.alreadyWatched === true);\n        // console.log(this.#originalMovieCardsInfo);\n        break;\n      case FilterType.FAVOURITES:\n        // console.log('FAVOURITES');\n        // console.log(this);\n        this.#originalMovieCardsInfo = this.#copyMovieCardsInfo.filter((movieCard) => movieCard.userDetails.favorite === true);\n        // console.log(this.#originalMovieCardsInfo);\n        break;\n      default:\n        this.#originalMovieCardsInfo = [...this.#copyMovieCardsInfo];\n      // console.log(this.#originalMovieCardsInfo)\n      // console.log(this);\n    }\n\n    this.#currentFilterType = filterMovieType;\n    // console.log(this.#currentFilterType);\n  };\n\n  /**\n   * @description Реализует подписку на изменение фильтрации\n   * @param {string} filterType - тип фильтрации\n   */\n  #handleFilterTypeChange = (filterType) => {\n    /*  Опишем в обработчике условие-оптимизацию, которое защитит от лишних перерисовок. (Если клик был по уже выбранному типу фильтра - то ничего ни делаем) */\n    if (this.#currentFilterType === filterType) {\n      return;\n    }\n\n    this.#filterMovies(filterType);\n    /* Если функция (метод) filterMovies будет ни стрелочной, то доступа к методу clearFilmsList у класса MovieBoardPresenter у нас не будет, т.к. потеряется this. Т.е. в this подставляется класс MovieBoardPresenter и у этого класса вызывается метод clearFilmsList. А стрелка сохраняет контекст там, где она обьявлена */\n    // - Очищаем список\n    this.#clearFilmsList();\n    // - Рендерим список заново\n    this.#renderFilms();\n    this.filterMovieView.filterMovieType = this.#currentFilterType;\n    // console.log(this.filterMovieView.filterMovieType)\n  };\n\n  /**\n   * @description Отрисовка типа фильтрации фильмов\n   */\n  renderFilterMovies = () => {\n    this.filterMovieView = new FilterMovieView(this.#originalMovieCardsInfo);\n    this.filterMovieView.setFilterListClickHandler(this.#handleFilterTypeChange);\n\n    if (this.prevFilterMovieView === undefined) {\n      render(this.filterMovieView, siteMainElement);\n    }\n\n    // replace(this.filterMovieView, this.prevFilterMovieView);\n\n    console.log('this.filterMovieView', this.filterMovieView)\n    console.log('this.prevFilterMovieView', this.prevFilterMovieView)\n\n    // replace(this.filterMovieView, this.prevFilterMovieView);\n\n    // console.log(this.prevFilterMovieView)\n\n    // this.#FilterMoviePresenter = new FilterMoviePresenter(siteMainElement, this.#originalMovieCardsInfo, this.#copyMovieCardsInfo, this.#clearFilmsList, this.#renderFilms);\n\n    // this.#FilterMoviePresenter.init();\n\n  };\n\n  /**\n   * @description Перерисовка компонента\n   */\n  updateFilterView = () => {\n    this.prevFilterMovieView = this.filterMovieView;\n\n    this.renderFilterMovies();\n\n    replace(this.filterMovieView, this.prevFilterMovieView);\n  };\n\n  /**\n   * @description Общее количество фильмов в подвале сайта\n   */\n  #renderTotalCountFilms() {\n    this.totalQuantityFilmsView = new TotalQuantityFilmsView(this.#originalMovieCardsInfo.length);\n\n    render(this.totalQuantityFilmsView, footerFilmStatistics);\n  }\n\n  /**\n   * @description Выделим весь код, что отвечает за отрисовку приложения в отдельный метод\n   * @param {HTMLElement} boardContainer - место в DOM куда отрисовываем элемент\n   */\n  #renderBoard = (boardContainer) => {\n    // Отрисовываем карточки фильмов на страницу\n\n    // Если фильмов с сервера не пришло...\n    if (this.#originalMovieCardsInfo.length === 0) {\n      // ... отрисовываем заглушку в случае отсутствия фильмов\n      this.#renderNoFilms();\n      // Делаем выход из функции, чтобы дальше отрисовка элементов не происходила\n      return;\n    }\n\n    // !!! Отрисовка идет по очереди (сверху - вниз)\n    // Отрисовываем структуру DOM дерева\n    // Фильтрация фильмов\n    this.renderFilterMovies();\n    // Сортировка фильмов\n    this.#renderSortList();\n    // Отрисовка контейнера для списка фильмов\n    this.#renderFilmsContainer();\n    // Отрисовка карточек фильмов\n    this.#renderFilms();\n    // Отрисовка кнопки 'Показать ещё'\n    this.#renderShowMoreButton();\n    // Отрисовка общего количества фильмов\n    this.#renderTotalCountFilms();\n  };\n\n  /**\n   * @description Инициализация Presenter-а и отрисовка карточек фильмов используя приватный метод класса #renderBoard\n   */\n  init = () => {\n    // Карточки фильмов получили из модели передав в конструктор класса MovieCardPresenter\n    this.#originalMovieCardsInfo = [...this.#filmCardInfo.filmCards];\n\n    /* В отличии от сортировки(фильтрации) по любому параметру,\n    исходный порядок можно сохранить только одним способом -\n    сохранив исходный массив: */\n    this.#copyMovieCardsInfo = [...this.#filmCardInfo.filmCards];\n\n    // Комментарии к фильмам получили из модели передав в конструктор класса MovieCardPresenter\n    this.#userComments = [...this.#filmCardInfo.userComments];\n\n    console.log(this.#originalMovieCardsInfo);\n    // console.log(this.#userComments);\n\n    // Отрисовка элементов интерфейса приложения\n    this.#renderBoard(this.#filmsContainer);\n  };\n}\n","export const TOTAL_RATING = {\n  MIN: 0,\n  MAX: 10,\n};\n\nexport const AGE_RATING = {\n  MIN: 0,\n  MAX: 21,\n};\n\nexport const RUNTIME = {\n  MIN: 35,\n  MAX: 220,\n};\n\nexport const COMMENT_QUANTITY = {\n  MIN: 0,\n  MAX: 10,\n};\n\nexport const COMMENT_ID = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nexport const TITLES = [\n  'The Dance of Life',\n  'Sagebrush Trail',\n  'The Man with the Golden Arm',\n  'Santa Claus Conquers the Martians',\n  'Popeye the Sailor Meets Sindbad the Sailor',\n];\n\nexport const ALTERNATIVE_TITLES = [\n  'The Shawshank Redemption',\n  'Silver Lining Playbook',\n  'Sausage Patry',\n  'About Time',\n  'Shark Tale',\n  'Die hard',\n  'Intouchables',\n  'Hangover',\n  'The lord of the rings',\n  'The dark knight',\n  'One flew over the Cuckoo’s nest',\n  'The silence of the lambs',\n  'How to train your dragon',\n  'Braveheart',\n];\n\nexport const DIRECTORS = [\n  'Steven Spielberg',\n  'Martin Scorsese',\n  'Quentin Tarantino',\n  'Woody Allen',\n];\n\nexport const WRITERS = [\n  'Billy Wilder',\n  'Joel Coen',\n  'Francis Ford Coppola',\n  'William Goldman',\n  'Nora Ephron',\n  'Ernest Lehman',\n  'George Lucas',\n];\n\nexport const ACTORS = [\n  'Sean Connery',\n  'Liam Neeson',\n  'Linda Hamilton',\n  'Kurt Russell',\n  'Sylvester Stallone',\n  'Clint Eastwood',\n];\n\nexport const COUNTRIES = [\n  'Russia',\n  'USA',\n  'Poland',\n  'Italy',\n  'Finland',\n  'India',\n];\n\nexport const GENRES = [\n  'Musical',\n  'Western',\n  'Drama',\n  'Comedy',\n  'Cartoon',\n  'Mystery',\n];\n\nexport const POSTERS = [\n  './images/posters/the-dance-of-life.jpg',\n  './images/posters/sagebrush-trail.jpg',\n  './images/posters/the-man-with-the-golden-arm.jpg',\n  './images/posters/popeye-meets-sinbad.png',\n  './images/posters/the-man-with-the-golden-arm.jpg',\n];\n\nexport const DESCRIPTIONS = [\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  'Cras aliquet varius magna, non porta ligula feugiat eget.',\n  'Fusce tristique felis at fermentum pharetra.',\n  'Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.',\n  'Phasellus eros mauris, condimentum, sodales efficitur ipsum.',\n  'Sed blandit, eros vel aliquam faucibus, purus ex euismod diam.',\n  'Sed sed nisi sed augue convallis suscipit in sed felis.',\n  'Nunc fermentum tortor. In rutrum ac purus sit amet tempus.',\n];\n\n/**\n * Эмоции в коментариях\n */\nexport const COMMENT_EMOTIONS = ['smile', 'sleeping', 'puke', 'angry'];\n\nexport const TEXT_COMMENTS = [\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  'Cras aliquet varius magna, non porta ligula feugiat eget.',\n  'Fusce tristique felis at fermentum pharetra.',\n  'Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.',\n  'Phasellus eros mauris, condimentum, sodales efficitur ipsum.',\n  'Sed blandit, eros vel aliquam faucibus, purus ex euismod diam.',\n  'Sed sed nisi sed augue convallis suscipit in sed felis.',\n  'Nunc fermentum tortor. In rutrum ac purus sit amet tempus.',\n];\n\n","import {\n  getRandomIntInclusive,\n  getBooleanValue,\n  getRandomArrayElement,\n  generateRandomDate,\n  getRandomArray,\n  getTimeInMinute,\n  getRandomArrayPart\n} from '../utils.js';\n\nimport {\n  TITLES,\n  ALTERNATIVE_TITLES,\n  TOTAL_RATING,\n  POSTERS,\n  AGE_RATING,\n  DIRECTORS,\n  RUNTIME,\n  DESCRIPTIONS,\n  COUNTRIES,\n  WRITERS,\n  ACTORS,\n  GENRES,\n  COMMENT_ID\n} from './const.js';\n\n/**\n * Описание фильмов\n */\nconst createFilmCardInfo = (_, index) => {\n  const id = index++;\n  return {\n    id,\n    comments: getRandomArray(COMMENT_ID),\n    filmInfo: {\n      title: TITLES[getRandomIntInclusive(0, TITLES.length - 1)],\n      alternativeTitle: ALTERNATIVE_TITLES[getRandomIntInclusive(0, ALTERNATIVE_TITLES.length - 1)],\n      totalRating: getRandomIntInclusive(TOTAL_RATING.MIN, TOTAL_RATING.MAX),\n      poster: getRandomArrayElement(POSTERS),\n      ageRating: getRandomIntInclusive(AGE_RATING.MIN, AGE_RATING.MAX),\n      director: DIRECTORS[getRandomIntInclusive(0, DIRECTORS.length - 1)],\n      writers: getRandomArrayPart(WRITERS),\n      actors: getRandomArray(ACTORS),\n      release: {\n        date: `${generateRandomDate()}T00:00:00.000Z`,\n        releaseCountry: COUNTRIES[getRandomIntInclusive(0, COUNTRIES.length - 1)],\n      },\n      runtime: getTimeInMinute(getRandomIntInclusive(RUNTIME.MIN, RUNTIME.MAX)),\n      genre: getRandomArray(GENRES),\n      description: DESCRIPTIONS[getRandomIntInclusive(0, DESCRIPTIONS.length - 1)],\n    },\n    userDetails: {\n      watchlist: getBooleanValue(),\n      alreadyWatched: getBooleanValue(),\n      watchingDate: `${generateRandomDate()}T16:12:32.554Z`,\n      favorite: getBooleanValue()\n    }\n  };\n};\n\n// !!! Правило хорошего кода, чтобы модуль возвращал функцию - поэтому записываем массив не в константу, а в функцию\n// const filmCardsInfo = () => Array.from({length: 4}, createFilmCardInfo);\n\nexport { createFilmCardInfo };\n\n\n","import { getRandomIntInclusive, generateRandomDate } from '../utils.js';\nimport {ACTORS, TEXT_COMMENTS, COMMENT_EMOTIONS} from './const.js';\n\n/**\n * Массив с комментариями пользователей к фильму\n */\nexport const createUserComment = (_, index) => {\n  const id = index++;\n  return {\n    id,\n    author: ACTORS[getRandomIntInclusive(0, ACTORS.length - 1)],\n    comment: TEXT_COMMENTS[getRandomIntInclusive(0, TEXT_COMMENTS.length - 1)],\n    date: `${generateRandomDate()}T16:12:32.554Z`,\n    emotion: COMMENT_EMOTIONS[getRandomIntInclusive(0, COMMENT_EMOTIONS.length - 1)]\n  };\n};\n","// import { render } from './render.js';\nimport { render } from './framework/render.js';\nimport UserTitleView from './view/user-title-view.js';\n\nimport MovieBoardPresenter from './presenter/movie-board-presenter.js';\n\nimport FilmCardInfoModel from './model/film-card-model.js';\n\n// const body = document.body;\n\n/**\n * Header сайта\n */\nconst siteHeaderElement = document.querySelector('.header');\n\n/**\n * Main сайта\n */\nconst siteMainElement = document.querySelector('.main');\n\nconst filmCardInfoModel = new FilmCardInfoModel();\n\nconst movieCardPresenter = new MovieBoardPresenter(siteMainElement, filmCardInfoModel);\n\nrender(new UserTitleView(), siteHeaderElement);\n\n// render(new ShowMoreBtnView(), siteMainElement);\n// render(new FilmDetailsView(), body);\n\n// console.log(filmCardInfoModel)\nmovieCardPresenter.init();\n\n\n","import { createFilmCardInfo } from '../mock-data/film-info.js';\nimport { createUserComment } from '../mock-data/user-comments.js';\n\n/**\n * Количество карточек фильмов\n */\nconst FILM_CARD_QUANTITY = 48;\n\nconst USER_COMMENT_QUANTITY = 30;\n\nexport default class FilmCardInfoModel {\n  // Сделаем часть полей в классах приватными (добавлением решетки в начало свойств классов)\n  #filmCards = Array.from({ length: FILM_CARD_QUANTITY }, createFilmCardInfo);\n  #userComments = Array.from({length: USER_COMMENT_QUANTITY}, createUserComment);\n\n  get filmCards() {\n    return this.#filmCards;\n  }\n\n  get userComments() {\n    return this.#userComments;\n  }\n}\n","// import { createElement } from '../render.js';\nimport AbstractView from '../framework/view/abstract-view';\n\n/**\n * @description Шаблон разметки (звание пользователя)\n * @returns {HTMLElement} - шаблонная строка с html\n */\nconst createUserTitleTemplate = () =>\n  `\n<section class=\"header__profile profile\">\n  <p class=\"profile__rating\">Movie Buff</p>\n  <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n</section>\n`;\n\nexport default class UserTitleView extends AbstractView {\n  // #element = null;\n\n  /**\n   * @description Метод, чтобы получить шаблон разметки\n   * @returns {HTMLElement} - шаблон разметки\n   */\n  get template() {\n    return createUserTitleTemplate();\n  }\n\n  // /**\n  //  * @description Метод позволяет на основе шаблона создать DOM элемент\n  //  * @returns {HTMLElement} - обьект DOM дерева (html разметка)\n  //  */\n  // get element() {\n  //   // Если уже этот элемент создан, то просто возвращаем его\n  //   if (!this.#element) {\n  //     this.#element = createElement(this.template);\n  //   }\n\n  //   return this.#element;\n  // }\n\n  // /**\n  //  * Метод для удаления элемента\n  //  */\n  // removeElement() {\n  //   this.#element = null;\n  // }\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","e","n","r","s","u","a","o","f","h","c","d","l","$","y","M","name","weekdays","split","months","ordinal","t","m","String","Array","v","z","utcOffset","Math","abs","floor","date","year","month","clone","add","ceil","p","w","D","ms","Q","toLowerCase","replace","g","_","S","args","arguments","O","locale","$L","utc","$u","x","$x","$offset","parse","prototype","$d","Date","NaN","test","match","substring","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","format","invalidDate","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","T","forEach","extend","$i","isDayjs","en","Ls","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","getter","__esModule","definition","key","Object","defineProperty","enumerable","prop","hasOwnProperty","nc","SHAKE_CLASS_NAME","AbstractView","_callback","constructor","template","removeElement","shake","callback","classList","setTimeout","newElement","innerHTML","firstElementChild","render","component","container","place","insertAdjacentElement","newComponent","oldComponent","oldElement","parent","parentElement","replaceChild","CommonFilmsSectionView","MainFilmsListSectionView","MovieCardContainerView","createShowMoreBtn","ShowMoreBtnView","setShowMoreBtnClickHandler","click","addEventListener","#onClickShowMoreBtn","EmptyFilmListView","FilterType","SortType","ListSortView","setSortTypeChangeHandler","evt","tagName","preventDefault","toggle","dataset","sortType","TotalQuantityFilmsView","moviesCount","super","getRandomIntInclusive","max","random","getBooleanValue","humanizeTaskDueDate","dueDate","dateFormat","dayjs","createDateMonth","generateRandomDate","getRandomArray","arr","rand","newArr","elem","indexOf","getTimeInMinute","time","minutes","getRandomArrayPart","array","changeClassName","className","sortFilmDateDown","filmDateA","filmDateB","dateA","filmInfo","release","dateB","AbstractStatefulView","_state","updateElement","_setState","_restoreHandlers","#rerenderElement","prevElement","FilmDetailsView","movieDetails","movieComments","changeMovieGroup","movieGroupBtnClick","setMoviePopupCloseHandler","closeBtnClick","#onMoviePopupCloseBtnClick","setEmojiCommentChoice","emojiChoice","value","createFilmDetailsPopupTemplate","comments","userDetails","filmComments","find","comment","filmGenres","genre","userComments","emotion","author","createUserCommentTemplate","activeClass","poster","title","ageRating","alternativeTitle","totalRating","director","writers","actors","runtime","releaseCountry","description","watchlist","alreadyWatched","favorite","body","FilmDetailsPopupPresenter","onMovieCardChange","onMovieChange","#handleMovieGroupChange","movieGroup","updatePopup","console","log","type","urlEmojie","emojieContainer","insertAdjacentHTML","movieCard","prevPopup","movie","closeFilmDetailsPopup","removeEventListener","onEscKeyPress","destroy","filmCard","MovieCardView","setMovieCardClickHandler","clickOnMovieCard","setWatchlistClickHandler","clickOnWatchlistBtn","#onWatchlistBtnClick","setAlreadyWatchedClickHandler","clickOnAlreadyWatchedBtn","#onAlreadyWatchedBtnClick","setFavoriteClickHandler","clickOnFavoriteBtn","#onFavoriteBtnClick","movieInfo","watchlistClassName","alreadyWatchedClassName","favoriteClassName","createMovieCardTemplate","MovieCardPresenter","movieCardView","prevMovieCardView","openFilmPopup","#addFilmToWatchlist","#addFilmToAlreadyWatched","#addFilmToFavorite","updateMovieCard","updateMovie","FilterMovieView","filterMovieType","movies","newValue","setFilterListClickHandler","filterType","createMainNavTemplate","filter","siteMainElement","footerFilmStatistics","COMMENT_ID","TITLES","ALTERNATIVE_TITLES","DIRECTORS","WRITERS","ACTORS","COUNTRIES","GENRES","POSTERS","DESCRIPTIONS","COMMENT_EMOTIONS","TEXT_COMMENTS","createFilmCardInfo","items","watchingDate","createUserComment","siteHeaderElement","filmCardInfoModel","from","filmCards","movieCardPresenter","listSortView","commonFilmsSectionView","movieCardContainerView","emptyFilmListView","filmDetailsPopupPresenter","filterMovieView","moviePresenters","Map","filmsContainer","filmCardInfo","movieSortType","sort","movieCardA","movieCardB","#renderSortList","#onLoadMoreFilmCard","rerenderMovieCard","updatedMovie","updateFilterView","#isFilmDetailsPopupOpen","#renderFilms","#clearFilmsList","presenter","clear","renderFilterMovies","prevFilterMovieView","totalQuantityFilmsView","boardContainer"],"sourceRoot":""}